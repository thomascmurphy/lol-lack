if getting locked db error
ActiveRecord::Base.connection.execute("BEGIN TRANSACTION; END;")

bin/rake db:migrate:reset   (reset db)
bin/rake db:reset db:seed   (clears db and seeds)
bin/rake db:migrate:down VERSION=20150331134827 (removes that migration, then you can delete file)

bin/rails generate migration AddJobToSkills job:references

if getting locked db error
ActiveRecord::Base.connection.execute("BEGIN TRANSACTION; END;")

export GEM_HOME=$PWD/gems
export RUBYLIB=$PWD/lib
export PATH=$PWD/bin:$PATH

Change to your application's directory.
cd /my/app

# View config/schedule.rb converted to cron syntax
bundle exec whenever

# Update crontab
bundle exec whenever -i

# Overwrite the whole crontab (be careful with this one!)
bundle exec whenever -w

# See all the options for the whenever command
bundle exec whenever -h




crontab -r
whenever --update-crontab --set environment='development'


rake secret
export SECRET_KEY_BASE=
../bin/restart

ps -u suffrage -o pid,rss,command | awk '{print $0}{sum+=$2} END {print "Total", sum/1024, "MB"}'

ps -u suffrage -o size,pid,user,command --sort -size | awk '{ hr=$1/1024 ; printf("%13.2f Mb ",hr) } { for ( x=4 ; x<=NF ; x++ ) { printf("%s ",$x) } print "" }'
